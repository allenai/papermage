[project]
name = 'papermage'
version = '0.1.0'
description = 'Papermage. Casting magic over scientific PDFs.'
license = {text = 'Apache-2.0'}
readme = 'README.md'
requires-python = '>=3.8'
dependencies = [
        'tqdm',
        'pdf2image',
        'pdfplumber==0.7.4',
        'requests',
        'numpy>=1.23.2',
        'scipy>=1.9.0',
        'pandas<2',
        'ncls==0.0.66',
        'necessary>=0.3.2',
        'unidecode>=1.3.4'
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Typing :: Typed",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
]
[[project.maintainers]]
name = "Kyle Lo"
email = "kylel@allenai.org"

[[project.maintainers]]
name = "Luca Soldaini"
email = "luca@soldaini.net"

[[project.authors]]
name = "Kyle Lo"
email = "kylel@allenai.org"

[[project.authors]]
name = "Luca Soldaini"
email = "luca@soldaini.net"

[[project.authors]]
name = "Shannon Zejiang Shen"
email = "zejiangshen@gmail.com"

[[project.authors]]
name = "Ben Newman"
email = "blnewman@stanford.edu"

[[project.authors]]
name = "Russell Authur"
email = "russell.authur@gmail.com"

[[project.authors]]
name = "Stefan Candra"
email = "stefanc@allenai.org"

[[project.authors]]
name = "Yoganand Chandrasekhar"
email = "yogic@allenai.org"

[[project.authors]]
name = "Regan Huff"
email = "reganh@allenai.org"

[[project.authors]]
name = "Amanpreet Singh"
email = "amans@allenai.org"

[[project.authors]]
name = "Chris Wilhelm"
email = "chrisw@allenai.org"

[[project.authors]]
name = "Angele Zamarron"
email = "angelez@allenai.org"

[project.urls]
'Homepage' = 'https://www.github.com/allenai/papermage'
'Repository' = 'https://www.github.com/allenai/papermage'
'Bug Tracker' = 'https://www.github.com/allenai/papermage/issues'

[tool.setuptools]
# ...
# By default, include-package-data is true in pyproject.toml, so you do
# NOT have to specify this line.
include-package-data = true

[tool.setuptools.packages.find]
where = ['.',]

[tool.setuptools.package-data]
papermage = [
    '../requirements.txt',
]

[build-system]
build-backend = 'setuptools.build_meta'
requires = [
    'setuptools >= 61.0.0',
    'pip >= 21.0.0',
    'wheel',
    'cython'
]

[project.optional-dependencies]
dev = [
    'pytest',
    'pytest-xdist',
    'pytest-cov',
    'mypy>=0.971'
]
visualizers = [
    'layoutparser==0.3.4'
]
predictors = [
    'thefuzz[speedup]',
    'scikit-learn==1.1.2',
    'xgboost==1.6.2',
    'spacy==3.3.1',
    'pysbd==0.3.4',
    'tokenizers==0.13.1',
    'torch==1.12.1',
    'torchvision==0.13.1',
    'layoutparser==0.3.4',
    'transformers',
    'smashed==0.1.10',
    'optimum[onnxruntime]==1.4.0',
    'pytorch-lightning==2.0.5',
    'springs==1.12.3',
    'wandb==0.15.7',
    'seqeval==1.2.2',
    'effdet==0.3.0'
]

[tool.pytest.ini_options]
addopts = '-n auto --cov=.'
testpaths = ['tests/']
pythonpath = [
  '.', 'src',
]
python_classes = ['Test*', '*Test']
log_format = '%(asctime)s - %(levelname)s - %(name)s - %(message)s'
log_level = 'DEBUG'
markers = []
filterwarnings = []

[tool.coverage.run]
omit = [
    '*__init__*',
    '*Test*',
    'tests/fixtures/*',
    'tests/*',
]
[tool.coverage.report]
fail_under = 25


[tool.black]
line-length = 115

include = '\.pyi?$'

exclude = '''
(
      __pycache__
    | \.git
    | \.mypy_cache
    | \.pytest_cache
    | \.vscode
    | \.venv
    | \bdist\b
    | \bdoc\b
)
'''

[tool.isort]
profile = "black"
multi_line_output = 3

[tool.autopep8]
max_line_length = 115
in-place = true
recursive = true
aggressive = 3

[tool.mypy]
python_version = 3.8
ignore_missing_imports = true
no_site_packages = true
allow_redefinition = false
warn_unused_configs = true
warn_unused_ignores = true
warn_no_return = true
warn_return_any = false
warn_unreachable = true
show_error_codes = true
pretty = true

[tool.mypy-tests]
strict_optional = false
